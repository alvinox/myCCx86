RELEASE := 0
DEBUG := 1

export RELEASE
export DEBUG

CC = clang++
#CC = g++

AR = ar
ARFLAGS = rcs
LDFLAGS = -lm -pthread

OPTIONS = -Wall -Wno-unused-result -Wno-unknown-pragmas -Wfatal-errors -pthread -fwrapv -Ofast -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC 
NVCC_OPTIONS = -Wall -Wno-unused-result -Wno-unknown-pragmas -Wfatal-errors -fPIC -O0

NVCC = nvcc -std=c++11
ARCH = -gencode arch=compute_30,code=sm_30 \
       -gencode arch=compute_35,code=sm_35 \
       -gencode arch=compute_50,code=[sm_50,compute_50] \
       -gencode arch=compute_52,code=[sm_52,compute_52] \

OBJDIR = obj

OBJS = $(addprefix $(OBJDIR)/, $(patsubstr %.c, %.o, $(CFILES)))
OBJ_TYPE = -O

# RELEASE has higher priority then DEBUG
ifneq ($(findstring 1, $(DEBUG) $(debug)),)
    RELEASE = 0
    DEBUG = 1
endif

ifneq ($(findstring 1, $(RELEASE) $(release)),)
    RELEASE = 1
    DEBUG = 0
endif

MICRO := 
ifeq ($(DEBUG), 1)
    MICRO += -O0 -g -DDEBUG
    OBJ_TYPE = -G
endif

CXXFLAGS += $(MICRO) -std=c++11


MODULE         = cit
MAIN           = main
BUILD_DIR      = build
INFRA_DIR      = infra
REGRESSION_DIR = regression